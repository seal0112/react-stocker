[{"/home/ec2-user/project/react-stocker/src/index.js":"1","/home/ec2-user/project/react-stocker/src/App.js":"2","/home/ec2-user/project/react-stocker/src/serviceWorker.js":"3","/home/ec2-user/project/react-stocker/src/Login.js":"4","/home/ec2-user/project/react-stocker/src/StockerLayout.js":"5","/home/ec2-user/project/react-stocker/src/PrivateRoute.js":"6","/home/ec2-user/project/react-stocker/src/utils/StockerAPI.js":"7","/home/ec2-user/project/react-stocker/src/Header.js":"8","/home/ec2-user/project/react-stocker/src/StockInfoAndCommodity.js":"9","/home/ec2-user/project/react-stocker/src/NaviBar.js":"10","/home/ec2-user/project/react-stocker/src/DailyInfo.js":"11","/home/ec2-user/project/react-stocker/src/Eps.js":"12","/home/ec2-user/project/react-stocker/src/Revenue.js":"13","/home/ec2-user/project/react-stocker/src/IncomeSheet.js":"14","/home/ec2-user/project/react-stocker/src/ProfitAnalysis.js":"15","/home/ec2-user/project/react-stocker/src/OperatingExpensesAnalysis.js":"16","/home/ec2-user/project/react-stocker/src/NoThisStock.js":"17","/home/ec2-user/project/react-stocker/src/CustomizedTable.js":"18","/home/ec2-user/project/react-stocker/src/utils/StockerTool.js":"19"},{"size":582,"mtime":1607915515755,"results":"20","hashOfConfig":"21"},{"size":1500,"mtime":1607916510764,"results":"22","hashOfConfig":"21"},{"size":5071,"mtime":1607915617938,"results":"23","hashOfConfig":"21"},{"size":3919,"mtime":1608174318705,"results":"24","hashOfConfig":"21"},{"size":4881,"mtime":1608178643900,"results":"25","hashOfConfig":"21"},{"size":823,"mtime":1608178034283,"results":"26","hashOfConfig":"21"},{"size":1777,"mtime":1607915491187,"results":"27","hashOfConfig":"21"},{"size":1706,"mtime":1608173578293,"results":"28","hashOfConfig":"21"},{"size":2243,"mtime":1608170359174,"results":"29","hashOfConfig":"21"},{"size":5050,"mtime":1608176836021,"results":"30","hashOfConfig":"21"},{"size":2846,"mtime":1608173064491,"results":"31","hashOfConfig":"21"},{"size":1881,"mtime":1608173391847,"results":"32","hashOfConfig":"21"},{"size":3433,"mtime":1608171571648,"results":"33","hashOfConfig":"21"},{"size":2821,"mtime":1608173962333,"results":"34","hashOfConfig":"21"},{"size":2483,"mtime":1608178485686,"results":"35","hashOfConfig":"21"},{"size":4285,"mtime":1608177690247,"results":"36","hashOfConfig":"21"},{"size":378,"mtime":1608176909296,"results":"37","hashOfConfig":"21"},{"size":2632,"mtime":1608172239556,"results":"38","hashOfConfig":"21"},{"size":271,"mtime":1607915295878,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"133a8nd",{"filePath":"43","messages":"44","errorCount":7,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":6,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":6,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":8,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/ec2-user/project/react-stocker/src/index.js",[],[],"/home/ec2-user/project/react-stocker/src/App.js",["88","89","90","91","92","93","94"],"import React, { Component } from 'react'\nimport StockerLayout from './StockerLayout'\nimport Login from './Login'\nimport PrivateRoute from './PrivateRoute'\nimport { Switch, Route, withRouter } from 'react-router-dom'\nimport * as StockerAPI from './utils/StockerAPI'\n\n/**\n * Stocker main compoment.\n */\nclass StockerApp extends Component {\n  /**\n  * constructor.\n  * @param {object} props.\n  */\n  constructor (props) {\n    super(props)\n    this.state = {\n      isAuth: false,\n      isLoading: true\n    }\n  }\n\n  componentDidMount = () => {\n    StockerAPI.checkAuth()\n      .then(res => res.data)\n      .then(data => this.handleAuthenticated(data))\n  }\n\n  handleAuthenticated = (res) => {\n    this.setState({\n      isAuth: res.isAuth,\n      isLoading: false\n    })\n    if (res.isAuth) {\n      console.log(this.props.history.location)\n\n      const { from } = this.props.history.location.state || { from: { pathname: '/' } }\n      this.props.history.replace(from)\n    }\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route\n              exact path=\"/login\"\n              handleAuthenticated={this.handleAuthenticated}>\n            <Login handleAuthenticated={this.handleAuthenticated}/>\n          </Route>\n          <PrivateRoute\n              path=\"/\"\n              isAuth={this.state.isAuth}\n              isLoading={this.state.isLoading}\n              component={StockerLayout}/>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(StockerApp)\n","/home/ec2-user/project/react-stocker/src/serviceWorker.js",[],"/home/ec2-user/project/react-stocker/src/Login.js",["95","96"],"import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport './css/Login.css'\nimport GoogleLogin from 'react-google-login'\nimport FacebookLogin from 'react-facebook-login'\nimport * as StockerAPI from './utils/StockerAPI'\nimport { Form, Button, Alert } from 'react-bootstrap'\n\nclass Login extends Component {\n  state = {\n    account: '',\n    password: '',\n    alertShow: false,\n    alertContent: 'ccc'\n  }\n\n  responseGoogle = googleUser => {\n    const idToken = googleUser.getAuthResponse().id_token\n    const data = {\n      external_type: 'google',\n      token: idToken\n    }\n    StockerAPI.login(data)\n      .then(this.props.handleAuthenticated)\n      .catch(err => this.setAlertShow(true, err.response.data))\n  }\n\n  responseFacebook = response => {\n    const accessToken = response.accessToken\n    const data = {\n      external_type: 'facebook',\n      token: accessToken\n    }\n    StockerAPI.login(data)\n      .then(this.props.handleAuthenticated)\n      .catch(err => this.setAlertShow(true, err.response.data))\n  }\n\n  loginWithAccount = event => {\n    event.preventDefault()\n    const data = {\n      external_type: 'internal',\n      data: {\n        account: this.state.account,\n        password: this.state.password\n      }\n    }\n    console.log(data)\n    this.setAlertShow(true, '帳號登入尚未完成')\n    // StockerAPI.login(query)\n    //  .then(this.props.handleAuthenticated)\n    //  .catch(err=>this.setAlertShow(true, err.response.data));\n  }\n\n  handleAccountInput = event => {\n    const value = event.target.value\n    this.setState(() => ({ account: value }))\n  }\n\n  handlePasswordInput = event => {\n    const value = event.target.value\n    this.setState(() => ({ password: value }))\n  }\n\n  setAlertShow = (toggle, content) => {\n    this.setState({\n      alertShow: toggle,\n      alertContent: content\n    })\n  }\n\n  render () {\n    return (\n      <div className=\"login-component text-center\">\n        <Form className=\"form-signin login-title\" onSubmit={this.loginWithAccount}>\n          {this.state.alertShow &&\n            <Alert\n                className=\"alert-login\"\n                variant=\"danger\"\n                onClose={() => this.setAlertShow(false)}\n                dismissible>\n              <Alert.Heading>You got problem!</Alert.Heading>\n              <p>\n                { this.state.alertContent }\n              </p>\n            </Alert>\n          }\n          <h1 className=\"h3 mb-3\">Stocker</h1>\n          <Form.Group controlId=\"formBasicAccount\">\n            <Form.Label className=\"sr-only\">Account</Form.Label>\n            <Form.Control type=\"text\"\n              placeholder=\"Account\"\n              onChange={this.handleAccountInput} />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label className=\"sr-only\">Password</Form.Label>\n            <Form.Control type=\"password\"\n              placeholder=\"Password\"\n              onChange={this.handlePasswordInput}/>\n          </Form.Group>\n          <Button\n            className=\"form-btn\"\n            variant=\"primary\"\n            size=\"lg\"\n            type=\"submit\" block>\n            Sign in\n          </Button>\n          <div className=\"login-btn-area\">\n            <GoogleLogin\n              className=\"oauth-login-btn\"\n              clientId=\"622841715235-kifmb8aoh7jvjt1kjpltdtut9tf8j3p5.apps.googleusercontent.com\"\n              buttonText=\"Sign in with Google\"\n              onSuccess={this.responseGoogle}\n              onFailure={this.responseGoogle}\n              cookiePolicy={'single_host_origin'}/>\n          </div>\n          <div className=\"login-btn-area\">\n            <FacebookLogin\n              appId=\"2670950613176820\"\n              autoLoad={false}\n              fields=\"name,email,picture\"\n              callback={this.responseFacebook} />\n          </div>\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Login)\n","/home/ec2-user/project/react-stocker/src/StockerLayout.js",[],"/home/ec2-user/project/react-stocker/src/PrivateRoute.js",["97","98","99"],"/home/ec2-user/project/react-stocker/src/utils/StockerAPI.js",[],"/home/ec2-user/project/react-stocker/src/Header.js",["100"],"import React, { Component } from 'react'\nimport {\n  Nav, Navbar, NavDropdown,\n  Form, FormControl\n} from 'react-bootstrap'\n\nclass Header extends Component {\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.handleStockNumChange(event.target[0].value)\n  }\n\n  render () {\n    return (\n      <header className=\"App-header\">\n        <Navbar variant=\"dark\" expand=\"md\">\n          <Navbar.Brand href=\"#home\">Stocker</Navbar.Brand>\n          <Form className=\"mr-auto\" onSubmit={this.handleSubmit}>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Search\"\n              className=\"mr-sm-2\"\n              size=\"sm\" />\n          </Form>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n            <Nav>\n              <Nav.Item>\n                <Nav.Link href=\"#home\">Home</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <Nav.Link href=\"#link\">Link</Nav.Link>\n              </Nav.Item>\n              <Nav.Item>\n                <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                  <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                  <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                  <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                </NavDropdown>\n              </Nav.Item>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </header>\n    )\n  }\n}\n\nexport default Header\n","/home/ec2-user/project/react-stocker/src/StockInfoAndCommodity.js",["101","102","103","104","105","106"],"import React, { Component } from 'react'\nimport './css/StockInfoAndCommodity.css'\nimport * as StockerAPI from './utils/StockerAPI'\n\nclass StockInfoAndCommodity extends Component {\n  _isMounted = false;\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      companyName: '',\n      exchangeType: '',\n      industryCategory: '',\n      stockFuture: true,\n      stockOption: true,\n      smallStockFuture: true\n    }\n  }\n\n  exchType = {\n    sii: '上市',\n    otc: '上櫃',\n    rotc: '興櫃',\n    pub: '公開發行'\n  }\n\n  handleStockInfoAndCommodity = (data) => {\n    console.log(data)\n    this.setState({\n      companyName: data.stockInformation['公司簡稱'],\n      exchangeType: this.exchType[data.stockInformation.exchangeType],\n      industryCategory: data.stockInformation['產業類別'],\n      stockFuture: data.stockCommodity.stock_future,\n      stockOption: data.stockCommodity.stock_option,\n      smallStockFuture: data.stockCommodity.small_stock_future\n    })\n  }\n\n  getStockInfoAndCommodity = () => {\n    StockerAPI.getStockInfoAndCommodity(this.props.stockNum)\n      .then(this.handleStockInfoAndCommodity)\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.stockNum !== prevProps.stockNum) {\n      this.getStockInfoAndCommodity(this.props.stockNum)\n    }\n  }\n\n  componentDidMount = () => {\n    this._isMounted = true\n    this.getStockInfoAndCommodity(this.props.stockNum)\n  }\n\n  componentWillUnmount = () => {\n    this._isMounted = false\n  }\n\n  render () {\n    const {\n      companyName,\n      exchangeType,\n      industryCategory,\n      stockFuture,\n      stockOption,\n      smallStockFuture\n    } = this.state\n\n    const stockInfoAndCommodity = [exchangeType, industryCategory]\n    if (stockFuture) stockInfoAndCommodity.push('股票期貨')\n    if (stockOption) stockInfoAndCommodity.push('股票選擇權')\n    if (smallStockFuture) stockInfoAndCommodity.push('小型股票期貨')\n\n    return (\n      <div className=\"StockInfoAndCommodity\">\n        <h3 id=\"stockName\">{this.props.stockNum} {companyName}</h3>\n        <p id=\"stockCommodity\">{`${stockInfoAndCommodity.join(', ')}`}</p>\n      </div>)\n  }\n}\n\nexport default StockInfoAndCommodity\n","/home/ec2-user/project/react-stocker/src/NaviBar.js",["107","108","109","110","111","112"],"/home/ec2-user/project/react-stocker/src/DailyInfo.js",["113","114","115","116"],"import React, { PureComponent } from 'react'\nimport './DailyInfo.css'\nimport { Row, Col, Card } from 'react-bootstrap'\nimport * as StockerAPI from './utils/StockerAPI'\n\nclass DailyInfo extends PureComponent {\n  state = {\n    本日收盤價: 0,\n    本日漲跌: 0,\n    本益比: 0,\n    近四季每股盈餘: 0\n  }\n\n  handleDailyInfo = (dailyInfo) => {\n    this.setState(dailyInfo)\n  }\n\n  componentDidMount = () => {\n    const stockNum = this.props.stockNum\n    this.getDailyInfo(stockNum)\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    if (prevProps.stockNum !== this.props.stockNum) {\n      this.getDailyInfo(this.props.stockNum)\n    }\n  }\n\n  getDailyInfo = (stockNum) => {\n    StockerAPI.getDailyInfo(stockNum)\n      .then(res => {\n        console.log(res)\n        this.handleDailyInfo(res)\n      })\n  }\n\n  render () {\n    let upAndDownCardText\n    if (this.state['本日漲跌'] >= 0) {\n      upAndDownCardText = (<Card.Text style={{ color: 'red' }}>\n        {`+${this.state['本日漲跌']} ` +\n        `(${Math.round(this.state['本日漲跌'] / (this.state['本日收盤價'] - this.state['本日漲跌']) * 10000) / 100})%`}\n      </Card.Text>)\n    } else {\n      upAndDownCardText = (<Card.Text style={{ color: 'green' }}>\n        {`${this.state['本日漲跌']} ` +\n        `(${Math.round(this.state['本日漲跌'] / (this.state['本日收盤價'] - this.state['本日漲跌']) * 10000) / 100}%)`}\n      </Card.Text>)\n    }\n\n    return (\n      <div className=\"Daily-info\">\n        <Row>\n          <Col md={3} xs={6}>\n            <Card id=\"price\">\n              <Card.Header>本日收盤價</Card.Header>\n              <Card.Body>\n                <Card.Text>\n                  {this.state['本日收盤價']}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={3} xs={6}>\n            <Card id=\"upAndDown\">\n              <Card.Header>本日漲跌</Card.Header>\n              <Card.Body>\n                {upAndDownCardText}\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={3} xs={6}>\n            <Card id=\"pe\">\n              <Card.Header>本益比</Card.Header>\n              <Card.Body>\n                <Card.Text>\n                  { this.state['本益比'] ? this.state['本益比'] : '--' }\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={3} xs={6}>\n            <Card id=\"fourSeasonEPS\">\n              <Card.Header>近四季每股盈餘</Card.Header>\n              <Card.Body>\n                <Card.Text>\n                  { this.state['近四季每股盈餘'] ? this.state['近四季每股盈餘'] : '--'}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default DailyInfo\n","/home/ec2-user/project/react-stocker/src/Eps.js",["117","118","119","120"],"import React, { Component } from 'react'\nimport { Chart } from 'react-google-charts'\nimport CustomizedTable from './CustomizedTable'\nimport * as StockerAPI from './utils/StockerAPI'\nimport * as StockerTool from './utils/StockerTool'\n\n/* EPS Data example for google chart\n * epsData: [\n *     ['Year/Season', '基本每股盈餘'],\n *     ['2017Q4', 2.1]\n * ]\n */\nclass Eps extends Component {\n  _isMounted = false\n\n  state = {\n    epsData: [\n      ['Year/Season', '基本每股盈餘'],\n      ['', 0]\n    ]\n  }\n\n  epsKeysOrder = ['Year/Season', '基本每股盈餘']\n\n  handleEpsState = (epsData) => {\n    if (this._isMounted) {\n      this.setState({ epsData })\n    }\n  }\n\n  getEpsData = (stockNum) => {\n    StockerAPI.getEps(stockNum)\n      .then(data => StockerTool.formatDataForGoogleChart(data, this.epsKeysOrder))\n      .then(this.handleEpsState)\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.stockNum !== prevProps.stockNum) {\n      this.getEpsData(this.props.stockNum)\n    }\n  }\n\n  componentDidMount = () => {\n    this._isMounted = true\n    this.getEpsData(this.props.stockNum)\n  }\n\n  componentWillUnmount = () => {\n    this._isMounted = false\n  }\n\n  render () {\n    const epsData = this.state.epsData\n    return (\n      <div className=\"Eps\">\n        <Chart\n          chartType=\"ColumnChart\"\n          width=\"100%\"\n          height=\"400px\"\n          loader={<div>Loading Chart</div>}\n          options={{\n            title: 'EPS',\n            legend: {\n              position: 'top'\n            },\n            chartArea: { width: '80%' },\n            colors: ['#2cc185'],\n            vAxis: {\n              title: 'EPS',\n              minValue: 0\n            },\n            hAxis: {\n              showTextEvery: 4\n            }\n          }}\n          data={epsData} />\n        <CustomizedTable data={epsData}/>\n      </div>\n    )\n  }\n}\n\nexport default Eps\n","/home/ec2-user/project/react-stocker/src/Revenue.js",["121","122","123","124"],"import React, { Component } from 'react'\nimport { Chart } from 'react-google-charts'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport CustomizedTable from './CustomizedTable'\nimport * as StockerAPI from './utils/StockerAPI'\nimport * as StockerTool from './utils/StockerTool'\n\n/*\n * Revenue Data example for google chart\n * revenueData: [\n *     [\"Year/Month\", \"當月營收\", \"去年同月增減\"],\n *     [\"2013/1\", 733.044, 22.6],\n * ]\n */\nclass Revenue extends Component {\n  _isMounted = false;\n\n  state = {\n    revenueData: [\n      ['Year/Month', '當月營收', '去年同月增減'],\n      ['', 0, 0]\n    ],\n    activeKey: 'precentageOperExp'\n  }\n\n  revenueKeysOrder = ['Year/Month', '當月營收', '去年同月增減']\n\n  handleCount = (key) => {\n    this.setState({\n      activeKey: key\n    })\n  }\n\n  handleRevenueData = (revenueData) => {\n    this.setState({ revenueData })\n  }\n\n  getRevenueData = (stockNum) => {\n    StockerAPI.getRevenue(stockNum)\n      .then(data => StockerTool.formatDataForGoogleChart(data, this.revenueKeysOrder))\n      .then(this.handleRevenueData)\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.stockNum !== prevProps.stockNum) {\n      this.getRevenueData(this.props.stockNum)\n    }\n  }\n\n  componentDidMount = () => {\n    this._isMounted = true\n    this.getRevenueData(this.props.stockNum)\n  }\n\n  componentWillUnmount = () => {\n    this._isMounted = false\n  }\n\n  render () {\n    const data = this.state.revenueData\n    const revenue = data.map(d => [].concat(d.slice(0, 2)))\n    const annualIncrease = data.map(d => [].concat(d.slice(0, 1), d.slice(2)))\n    return (\n      <div className=\"revenue\">\n        <Tabs defaultActiveKey=\"revenue\" id=\"Revenue-Analysis-tab\" onSelect={this.handleCount}>\n          <Tab eventKey=\"revenue\" title=\"當月營收\">\n            <Chart\n              chartType=\"ComboChart\"\n              width=\"100%\"\n              height=\"400px\"\n              loader={<div>Loading Chart</div>}\n              options={{\n                title: '營業費用比例',\n                legend: {\n                  position: 'top'\n                },\n                chartArea: { width: '80%' },\n                seriesType: 'bars',\n                series: {\n                  0: { visibleInLegend: true, color: '#2cc185' }\n                },\n                pointSize: 7,\n                vAxes: {\n                  0: {}\n                },\n                hAxis: {\n                  showTextEvery: 12\n                }\n              }}\n              data={revenue} />\n          </Tab>\n          <Tab eventKey=\"annualIncrease\" title=\"去年同月增減\">\n            <Chart\n              chartType=\"ComboChart\"\n              width=\"100%\"\n              height=\"500px\"\n              loader={<div>Loading Chart</div>}\n              options={{\n                title: '去年同月增減',\n                legend: {\n                  position: 'top'\n                },\n                chartArea: { width: '75%' },\n                seriesType: 'line',\n                series: {\n                  0: { visibleInLegend: true, color: 'red' }\n                },\n                pointSize: 7,\n                vAxes: {\n                  0: {}\n                },\n                hAxis: {\n\n                }\n              }}\n              data={annualIncrease} />\n          </Tab>\n        </Tabs>\n        <CustomizedTable data={data}/>\n      </div>\n    )\n  }\n}\n\nexport default Revenue\n","/home/ec2-user/project/react-stocker/src/IncomeSheet.js",["125","126","127","128"],"import React, { Component } from 'react'\nimport { Chart } from 'react-google-charts'\nimport CustomizedTable from './CustomizedTable'\nimport * as StockerAPI from './utils/StockerAPI'\nimport * as StockerTool from './utils/StockerTool'\n\n/*\n * Income Sheet Data example for google chart\n * incomeSheetData: [\n *     [\"Year/Season\", \"營業收入合計\", \"營業毛利\", \"營業利益\", \"稅前淨利\", \"本期淨利\", \"母公司業主淨利\"],\n *     [\"2017Q4\", 277570284, 138715365, 108894999, 111674900, 99306060, 99286122]\n * ]\n */\nclass IncomeSheet extends Component {\n  _isMounted = false\n\n  state = {\n    incomeSheetData: [\n      ['Year/Season', '營業收入合計', '營業毛利', '營業利益', '稅前淨利', '本期淨利', '母公司業主淨利'],\n      ['', 0, 0, 0, 0, 0, 0]\n    ]\n  }\n\n  incomeSheetKeysOrder = [\n    'Year/Season', '營業收入合計', '營業毛利', '營業利益', '稅前淨利', '本期淨利', '母公司業主淨利']\n\n  handleIncomeSheetState = (incomeSheetData) => {\n    this.setState({ incomeSheetData })\n  }\n\n  getIncomeSheetData = (stockNum) => {\n    StockerAPI.getIncomeSheet(stockNum)\n      .then(data => StockerTool.formatDataForGoogleChart(data, this.incomeSheetKeysOrder))\n      .then(this.handleIncomeSheetState)\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.stockNum !== prevProps.stockNum) {\n      this.getIncomeSheetData(this.props.stockNum)\n    }\n  }\n\n  componentDidMount = () => {\n    this._isMounted = true\n    this.getIncomeSheetData(this.props.stockNum)\n  }\n\n  componentWillUnmount = () => {\n    this._isMounted = false\n  }\n\n  render () {\n    const data = this.state.incomeSheetData\n    return (\n      <div className=\"IncomeSheet\">\n        <Chart\n          chartType=\"ComboChart\"\n          width=\"100%\"\n          height=\"400px\"\n          loader={ <div>Loading Chart</div> }\n          options={{\n            chart: {\n              title: '損益表'\n            },\n            legend: {\n              position: 'top'\n            },\n            chartArea: { width: '80%' },\n            series: {\n              0: { visibleInLegend: true },\n              1: { visibleInLegend: true },\n              2: { visibleInLegend: true },\n              3: { visibleInLegend: true },\n              4: { visibleInLegend: true },\n              5: { visibleInLegend: true }\n            },\n            pointSize: 7,\n            vAxes: {\n              // Adds labels to each axis; they don't have to match the axis names.\n              0: { baseline: 0 }\n            },\n            hAxis: {\n              showTextEvery: 4\n            },\n            explorer: {\n              actions: ['dragToZoom', 'rightClickToReset']\n            }\n          }}\n          data={data} />\n        <CustomizedTable data={data}/>\n      </div>\n    )\n  }\n}\n\nexport default IncomeSheet\n","/home/ec2-user/project/react-stocker/src/ProfitAnalysis.js",["129","130","131","132"],"/home/ec2-user/project/react-stocker/src/OperatingExpensesAnalysis.js",["133","134","135","136"],"/home/ec2-user/project/react-stocker/src/NoThisStock.js",["137"],"/home/ec2-user/project/react-stocker/src/CustomizedTable.js",["138","139","140","141","142","143","144","145"],"import React, { Component } from 'react'\nimport './CustomizedTable.css'\nimport { Table, Spinner } from 'react-bootstrap'\n\nclass CustomizedTable extends Component {\n  constructor (props) {\n    super(props)\n    // 產生一個可以儲存 textInput DOM element 的 ref\n    this.tableScroller = React.createRef()\n  }\n\n  numberWithCommas = (x) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n  }\n\n  controlScrollToEnd = () => {\n    this.tableScroller.current.scrollLeft = this.tableScroller.current.scrollWidth\n  }\n\n  componentDidMount = () => {\n    this.controlScrollToEnd()\n  }\n\n  componentDidUpdate = () => {\n    this.controlScrollToEnd()\n  }\n\n  render () {\n    const data = this.props.data\n    return data.length === 0\n      ? (<div className=\"Customized-table\">\n          <div className=\"table-scroller\" ref={this.tableScroller}>\n            <Spinner\n              animation=\"border\"\n              variant=\"success\"\n              style={{ position: 'relative', left: '50%' }}/>\n          </div>\n        </div>)\n      : (<div className=\"Customized-table\">\n        <div className=\"table-scroller\" ref={this.tableScroller}>\n          <Table striped bordered hover responsive=\"md\">\n            <thead>\n              <tr key=\"time\">\n                {this.props.data.map((d, index) =>\n                  (<th className={index === 0 ? 'head-col' : ''} key={`time-${d[0]}`}>{d[0]}</th>)\n                )}\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.data[0].map((d, index) => {\n                if (index !== 0) {\n                  return (\n                    <tr key={`${d}`}>\n                      {this.props.data.map(\n                        (rowData, rowIdx) => {\n                          if (rowIdx === 0) {\n                            return (\n                              <th\n                                  className=\"head-col\"\n                                  key={`${d}-${rowData[0]}`}>\n                                {rowData[index]}\n                              </th>)\n                          } else {\n                            return (<td key={ `${d}-${rowData[0]}` }>{\n                              typeof (rowData[index]) === 'number' ? this.numberWithCommas(rowData[index]) : rowData[index]\n                            }</td>)\n                          }\n                        })\n                      }\n                    </tr>\n                  )\n                } else {\n                  return null\n                }\n              })}\n            </tbody>\n          </Table>\n        </div>\n      </div>)\n  }\n}\n\nexport default CustomizedTable\n","/home/ec2-user/project/react-stocker/src/utils/StockerTool.js",[],{"ruleId":"146","severity":2,"message":"147","line":36,"column":30,"nodeType":"148","endLine":36,"endColumn":37},{"ruleId":"146","severity":2,"message":"149","line":36,"column":38,"nodeType":"148","endLine":36,"endColumn":46},{"ruleId":"146","severity":2,"message":"147","line":38,"column":35,"nodeType":"148","endLine":38,"endColumn":42},{"ruleId":"146","severity":2,"message":"149","line":38,"column":43,"nodeType":"148","endLine":38,"endColumn":51},{"ruleId":"146","severity":2,"message":"150","line":38,"column":52,"nodeType":"148","endLine":38,"endColumn":57},{"ruleId":"146","severity":2,"message":"147","line":39,"column":18,"nodeType":"148","endLine":39,"endColumn":25},{"ruleId":"146","severity":2,"message":"151","line":39,"column":26,"nodeType":"148","endLine":39,"endColumn":33},{"ruleId":"146","severity":2,"message":"152","line":24,"column":24,"nodeType":"148","endLine":24,"endColumn":43},{"ruleId":"146","severity":2,"message":"152","line":35,"column":24,"nodeType":"148","endLine":35,"endColumn":43},{"ruleId":"146","severity":2,"message":"153","line":7,"column":13,"nodeType":"154","endLine":7,"endColumn":33},{"ruleId":"146","severity":2,"message":"155","line":7,"column":35,"nodeType":"154","endLine":7,"endColumn":41},{"ruleId":"146","severity":2,"message":"156","line":7,"column":43,"nodeType":"154","endLine":7,"endColumn":52},{"ruleId":"146","severity":2,"message":"157","line":10,"column":16,"nodeType":"148","endLine":10,"endColumn":36},{"ruleId":"146","severity":2,"message":"158","line":40,"column":52,"nodeType":"148","endLine":40,"endColumn":60},{"ruleId":"146","severity":2,"message":"158","line":48,"column":20,"nodeType":"148","endLine":48,"endColumn":28},{"ruleId":"146","severity":2,"message":"158","line":48,"column":43,"nodeType":"148","endLine":48,"endColumn":51},{"ruleId":"146","severity":2,"message":"158","line":49,"column":48,"nodeType":"148","endLine":49,"endColumn":56},{"ruleId":"146","severity":2,"message":"158","line":55,"column":46,"nodeType":"148","endLine":55,"endColumn":54},{"ruleId":"146","severity":2,"message":"158","line":79,"column":40,"nodeType":"148","endLine":79,"endColumn":48},{"ruleId":"146","severity":2,"message":"159","line":13,"column":24,"nodeType":"154","endLine":13,"endColumn":29},{"ruleId":"146","severity":2,"message":"160","line":13,"column":31,"nodeType":"154","endLine":13,"endColumn":33},{"ruleId":"146","severity":2,"message":"161","line":13,"column":35,"nodeType":"154","endLine":13,"endColumn":54},{"ruleId":"146","severity":2,"message":"162","line":13,"column":56,"nodeType":"154","endLine":13,"endColumn":60},{"ruleId":"163","severity":2,"message":"164","line":147,"column":26,"nodeType":"165","endLine":149,"endColumn":12},{"ruleId":"146","severity":2,"message":"158","line":165,"column":83,"nodeType":"148","endLine":165,"endColumn":91},{"ruleId":"146","severity":2,"message":"158","line":19,"column":33,"nodeType":"148","endLine":19,"endColumn":41},{"ruleId":"146","severity":2,"message":"158","line":24,"column":19,"nodeType":"148","endLine":24,"endColumn":27},{"ruleId":"146","severity":2,"message":"158","line":24,"column":43,"nodeType":"148","endLine":24,"endColumn":51},{"ruleId":"146","severity":2,"message":"158","line":25,"column":36,"nodeType":"148","endLine":25,"endColumn":44},{"ruleId":"146","severity":2,"message":"158","line":38,"column":20,"nodeType":"148","endLine":38,"endColumn":28},{"ruleId":"146","severity":2,"message":"158","line":38,"column":43,"nodeType":"148","endLine":38,"endColumn":51},{"ruleId":"146","severity":2,"message":"158","line":39,"column":34,"nodeType":"148","endLine":39,"endColumn":42},{"ruleId":"146","severity":2,"message":"158","line":45,"column":32,"nodeType":"148","endLine":45,"endColumn":40},{"ruleId":"146","severity":2,"message":"158","line":45,"column":20,"nodeType":"148","endLine":45,"endColumn":28},{"ruleId":"146","severity":2,"message":"158","line":45,"column":43,"nodeType":"148","endLine":45,"endColumn":51},{"ruleId":"146","severity":2,"message":"158","line":46,"column":38,"nodeType":"148","endLine":46,"endColumn":46},{"ruleId":"146","severity":2,"message":"158","line":52,"column":36,"nodeType":"148","endLine":52,"endColumn":44},{"ruleId":"146","severity":2,"message":"158","line":38,"column":20,"nodeType":"148","endLine":38,"endColumn":28},{"ruleId":"146","severity":2,"message":"158","line":38,"column":43,"nodeType":"148","endLine":38,"endColumn":51},{"ruleId":"146","severity":2,"message":"158","line":39,"column":42,"nodeType":"148","endLine":39,"endColumn":50},{"ruleId":"146","severity":2,"message":"158","line":45,"column":40,"nodeType":"148","endLine":45,"endColumn":48},{"ruleId":"146","severity":2,"message":"158","line":37,"column":20,"nodeType":"148","endLine":37,"endColumn":28},{"ruleId":"146","severity":2,"message":"158","line":37,"column":43,"nodeType":"148","endLine":37,"endColumn":51},{"ruleId":"146","severity":2,"message":"158","line":38,"column":37,"nodeType":"148","endLine":38,"endColumn":45},{"ruleId":"146","severity":2,"message":"158","line":44,"column":35,"nodeType":"148","endLine":44,"endColumn":43},{"ruleId":"146","severity":2,"message":"158","line":51,"column":20,"nodeType":"148","endLine":51,"endColumn":28},{"ruleId":"146","severity":2,"message":"158","line":51,"column":43,"nodeType":"148","endLine":51,"endColumn":51},{"ruleId":"146","severity":2,"message":"158","line":52,"column":48,"nodeType":"148","endLine":52,"endColumn":56},{"ruleId":"146","severity":2,"message":"158","line":58,"column":46,"nodeType":"148","endLine":58,"endColumn":54},{"ruleId":"146","severity":2,"message":"158","line":9,"column":42,"nodeType":"148","endLine":9,"endColumn":50},{"ruleId":"146","severity":2,"message":"166","line":29,"column":29,"nodeType":"148","endLine":29,"endColumn":33},{"ruleId":"146","severity":2,"message":"167","line":30,"column":17,"nodeType":"148","endLine":30,"endColumn":23},{"ruleId":"146","severity":2,"message":"166","line":44,"column":29,"nodeType":"148","endLine":44,"endColumn":33},{"ruleId":"146","severity":2,"message":"168","line":44,"column":34,"nodeType":"148","endLine":44,"endColumn":37},{"ruleId":"146","severity":2,"message":"166","line":50,"column":27,"nodeType":"148","endLine":50,"endColumn":31},{"ruleId":"146","severity":2,"message":"169","line":50,"column":35,"nodeType":"148","endLine":50,"endColumn":38},{"ruleId":"146","severity":2,"message":"166","line":54,"column":35,"nodeType":"148","endLine":54,"endColumn":39},{"ruleId":"146","severity":2,"message":"168","line":54,"column":40,"nodeType":"148","endLine":54,"endColumn":43},"react/prop-types","'history' is missing in props validation","Identifier","'history.location' is missing in props validation","'history.location.state' is missing in props validation","'history.replace' is missing in props validation","'handleAuthenticated' is missing in props validation","'component' is missing in props validation","Property","'isAuth' is missing in props validation","'isLoading' is missing in props validation","'handleStockNumChange' is missing in props validation","'stockNum' is missing in props validation","'label' is missing in props validation","'to' is missing in props validation","'activeOnlyWhenExact' is missing in props validation","'icon' is missing in props validation","react/no-children-prop","Do not pass children as props. Instead, nest children between the opening and closing tags.","JSXAttribute","'data' is missing in props validation","'data.length' is missing in props validation","'data.map' is missing in props validation","'data[].map' is missing in props validation"]